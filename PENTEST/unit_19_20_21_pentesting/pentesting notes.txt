introduction to intelligence gathering / pentesting
    day 1 objective
        PTES, NMAP, Nessus
        business purpose and goals of pentesting
        PTES steps mainly info gathering and vulnurability

    business goals of pentesting
        pentesting: the systematic process of identifying an organizations vulnurabilities and providing recommendations on how to fix them
        real purpose: to help the client improve their security
        engagement: relationship between the authorized pentester and organization

    Black box
        pentester is not given any inside knowledge about the network thats being attacked

    white box
        some info is provided ex: scope of different domains or some ip address space
    
    3 phases of an engagement
        intelligence gathering: finding a network of interest and scanning it to idenity hosts that exist on it
        vulnerability analysis: which of those hosts may be vulnerable
        exploitation:
    
    Pentesting Execution Standard (PTES)
        step 1
        pre-engagement interaction
            working with client to identify what the scope of the pen test inside
            making sure you are authorized by client

        step 2
        intelligence gathering / mapping
            passive
                anything thats publicly available
                the different people in the organization on social media ex:linkedin
                reconnaissanse
            active
                port scans
                throwing different packets against the network
        
        step 3
        threat modeling and vulnurability assessment
            how much damage could i do?

        step 4
        exploitation
            automated exploitation
                metasploit: exploit framework 
            use of pre-existing exploits
            custom exploits
        
        step 5
        post exploitation
            privilege escalation
                vertical escalation: gaining higher privileges
                horizontal escalation: moving between machines with same privilege
        
        step 6
        finalizing report

    intelligence gathering tools
        two main classes of vulnurabilities
            network vulnurabilities
                outdated versions of software
                improbably configured systems
                unpatched machines

            social vulnurerabilities
                employees that are not well trainied

        1-mapping the network: finding footprint of network
        2-fingerprinting servers: finding what services and versions of software are running
        3-organizational research: social engineering or open source intelligence (osint)

    NMAP and ZenMap have same functionality
    NMAP uses the command line 
    ZenMap uses a graphical user interface
    ZenMap is more common because its more straightforward

    Recap
        understanding:
            what is the footprint of an organization? what is the attack scope?
            things we can attack for the next step, reconnaissanse

    Nessus
             vulnerability assessment
                NMAP focus on 
                    scan types
                    saving output
                    researching vulnurabilities
            enumerating services
                post scans determing which posts are exposed and which services are running
                NMAP can scan TCP and unpatched
                    -TCP is more reliable, connection oriented
                    -UDP is less reliable
                begin by conducting SYN scan
                    nmap -sS <Target IP Address>
            banner grabbing and version detection
                opens a connection that prints out anything sent over the service within five seconds
            vulnurability scanning
                once we know a port is open we want to find out what known vulnerabilities there are
            overview
                provides a more graphical way, audio reporting features
        
        8. Notice the different types of "Discover type".
            i. How is this different/similar to NMAP
                -Nessus offers host enumeration, port scan
                -this is similar to NMAP in that it allows us to port scan a target
                -this is different in that we have fewer options
                -NMAP lets us select between TCP SYN and Connect scans, scan specific ports, etc
        11b. Notice the default for the SSL search is on "Known SSL ports".
            i. List known SSL ports
                443 (HTTPS), 995 (POP3-SSL), 993 (IMAP-SSL)
            ii. Why would you want to search for SSL "on all ports"?
                encrypted services can run on any port. there is no reason admins cant run SSL services on non-standard ports
        12b.ii. Why would you want to add application/file white/blacklisting to your scan?
                These additions help you stay within the scope of your engagement and avoid sending traffic to delicate hosts    
        26. What are three things that are different or similar between Nessus and NMAP?
                -Nessus and NMAP both run port scans but only Nessus is a specicialized vulnerability scanner
                -NMAP provides more granular control over exactly how it scans targets
                -Nessus allows you to save profiles and generate reports, making it more useful than NMAP for generating artifacts for use in reports
        27. Provide an example of where/why you would use one over the other?
                -nmapshould be used for more granular port scanning
                    UDP scanning / banner grabbing on specific ports
                -Nessus is useful for generating vulnerability reports
            Is there an instance where you would not want to use either?
                no cases come to mind in which NMAP wouldnt be useful, but Nessus is heavy for light/early-stage reconnaissance

information gathering and introduction to exploitation
    objective
        perform intense scans of target hosts using nmap
        detect specific vulnerability, such as shellshock, using nmap NSE
        send inejection payloads to a vulnerable server using Burp Repeater

    Shellshock
        allows remote code execution 
        arbitrary code could be included in URL requests to servers that used server side scripts on the back-end, so if they sent malicious code it wouldnt be parced and sanitized and you could run commands remotely
        common gateway interface: server side script language that sometimes supports the ability to take input from URL request and include those as variables within the code that gets run
        when CGI runs it could take different parts of URL request, mostly headers, and make variables out of them 

    practice: scanning and enumeration
        objective
            preform host discover and service enumeration on target subnet
            scan live hosts for vulnerability to Shellshock 
            research Heartbleed

exploitation with metasploit
    objective
        use searchsploit to research exploits and scripts related to Heartbleed
        identify hosts vulnerable to Heartbleed
        use metasploit to exploit Heartbleed and Shellshock

    heartblead and searchsploit
        heartblead
            
        searchsploit


    metasploit


            
            